<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AABAREQDQEREA0BERAM/Q0MDRkhIB0tMTBpGSEgGSktLEkpLSxJGSEgGS0xMGkZISAc/Q0MDQEREA0BE
        RANAREQDQEREA0BERARAREQENz4+AktMTB9NTU2nS0xMGkxNTXBMTU1wS0xMGk1NTadLTEwfNz4+AkBE
        RARAREQEQEREA0BERAM/REQENj09AiIvLwFLTEwcTU1NgkxMTDFMTU1jTE1NY0xMTDFNTU2CS0xMHCIv
        LwE2PT0CP0REBEBERAM/Q0MDRkhIB0tMTB9LTEwcTU1Nk01NTeBNTU3iTU1N4E1NTeBNTU3iTU1N4E1N
        TZNLTEwcS0xMH0VISAc/Q0MDNj09AktLSxhNTU2pTU1NgU1NTd5NTU3QTU1NnU1NTaJNTU2iTU1NnU1N
        TdBNTU3eTU1NgU1NTalLS0sYNj09Aj9DQwNFR0cGS0xMGkxMTDFNTU3iTU1NnU1NTb5NTU3fTU1N301N
        Tb5NTU2dTU1N4kxMTDFLTEwaRUdHBj9ERAM7QEACSktLEUxNTXFMTU1jTU1N4E1NTaJNTU3dTU1N/01N
        Tf9NTU3dTU1Nok1NTeBMTU1jTE1NcEpLSxE7QUEDO0BAAkpLSxFMTU1xTE1NY01NTeBNTU2iTU1N3U1N
        Tf9NTU3/TU1N3U1NTaJNTU3gTE1NY0xNTXFKS0sRO0FBAj9ERANFR0cGS0xMGkxMTDFNTU3iTU1NnU1N
        Tb5NTU3fTU1N301NTb5NTU2dTU1N4kxMTDFLTEwaRUdHBj9ERAM2PT0CS0tLGE1NTalNTU2BTU1N3k1N
        TdBNTU2dTU1Nok1NTaJNTU2dTU1N0E1NTd5NTU2BTU1NqUtLSxg2PT0CP0NDA0ZISAdLTEwfS0xMHE1N
        TZJNTU3gTU1N4k1NTeBNTU3gTU1N4k1NTeBNTU2SS0xMHEtMTB9GSEgHP0NDA0BERAM/REQENj09AiIv
        LwFLTEwcTU1NgkxMTDFMTU1jTE1NY0xMTDFNTU2CS0xMHCIvLwE2PT0CP0REBEBERANAREQDQEREBEBE
        RAQ2PT0CS0xMH01NTalLTEwaTU1NcUxNTXFLTEwaTU1NqUtMTB82PT0CQEREBEBERARAREQDQEREA0BE
        RARAREQEP0REBEZISAdLTEwYRUdHBkpLSxFKS0sRRUdHBktMTBhGSEgHP0REBEBERARAREQEQEREA0BE
        RANAREQEQEREBEBERAQ/REQEOkBAAz9ERAQ8QUEDPEJCAz9ERAQ6QEADP0REBEBERARAREQEQEREBEBE
        RANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BERANAREQDQEREA0BE
        RANAREQDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>